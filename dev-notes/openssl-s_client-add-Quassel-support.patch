diff --git a/apps/s_client.c b/apps/s_client.c
index d240fe2..b7329d5 100644
--- a/apps/s_client.c
+++ b/apps/s_client.c
@@ -229,7 +229,7 @@ static void sc_usage(void)
 	BIO_printf(bio_err," -starttls prot - use the STARTTLS command before starting TLS\n");
 	BIO_printf(bio_err,"                 for those protocols that support it, where\n");
 	BIO_printf(bio_err,"                 'prot' defines which one to assume.  Currently,\n");
-	BIO_printf(bio_err,"                 only \"smtp\", \"pop3\", \"imap\", and \"ftp\" are supported.\n");
+	BIO_printf(bio_err,"                 only \"smtp\", \"pop3\", \"imap\", \"ftp\" and \"quassel\" are supported.\n");
 #ifndef OPENSSL_NO_ENGINE
 	BIO_printf(bio_err," -engine id    - Initialise and use the specified engine\n");
 #endif
@@ -270,7 +270,8 @@ enum
 	PROTO_SMTP,
 	PROTO_POP3,
 	PROTO_IMAP,
-	PROTO_FTP
+	PROTO_FTP,
+	PROTO_QUASSEL
 };
 
 int MAIN(int, char **);
@@ -538,6 +539,8 @@ int MAIN(int argc, char **argv)
 				starttls_proto = PROTO_IMAP;
 			else if (strcmp(*argv,"ftp") == 0)
 				starttls_proto = PROTO_FTP;
+			else if (strcmp(*argv,"quassel") == 0)
+				starttls_proto = PROTO_QUASSEL;
 			else
 				goto bad;
 			}
@@ -933,6 +936,47 @@ re_start:
 		BIO_printf(sbio,"AUTH TLS\r\n");
 		BIO_read(sbio,sbuf,BUFSIZZ);
 		}
+	else if (starttls_proto == PROTO_QUASSEL)
+		{
+		BIO_write(sbio,	"\x00\x00\x02\x1d\x00\x00\x00\x08\x00\x00\x00\x00\x06\x00\x00"
+				"\x00\x0c\x00\x55\x00\x73\x00\x65\x00\x53\x00\x73\x00\x6c\x00"
+				"\x00\x00\x01\x00\x01\x00\x00\x00\x1c\x00\x55\x00\x73\x00\x65"
+				"\x00\x43\x00\x6f\x00\x6d\x00\x70\x00\x72\x00\x65\x00\x73\x00"
+				"\x73\x00\x69\x00\x6f\x00\x6e\x00\x00\x00\x01\x00\x01\x00\x00"
+				"\x00\x1e\x00\x50\x00\x72\x00\x6f\x00\x74\x00\x6f\x00\x63\x00"
+				"\x6f\x00\x6c\x00\x56\x00\x65\x00\x72\x00\x73\x00\x69\x00\x6f"
+				"\x00\x6e\x00\x00\x00\x03\x00\x00\x00\x00\x09\x00\x00\x00\x0e"
+				"\x00\x4d\x00\x73\x00\x67\x00\x54\x00\x79\x00\x70\x00\x65\x00"
+				"\x00\x00\x0a\x00\x00\x00\x00\x14\x00\x43\x00\x6c\x00\x69\x00"
+				"\x65\x00\x6e\x00\x74\x00\x49\x00\x6e\x00\x69\x00\x74\x00\x00"
+				"\x00\x1a\x00\x43\x00\x6c\x00\x69\x00\x65\x00\x6e\x00\x74\x00"
+				"\x56\x00\x65\x00\x72\x00\x73\x00\x69\x00\x6f\x00\x6e\x00\x00"
+				"\x00\x0a\x00\x00\x00\x01\x0e\x00\x76\x00\x30\x00\x2e\x00\x34"
+				"\x00\x2e\x00\x30\x00\x20\x00\x5b\x00\x2b\x00\x33\x00\x31\x00"
+				"\x32\x00\x5d\x00\x20\x00\x28\x00\x67\x00\x69\x00\x74\x00\x2d"
+				"\x00\x3c\x00\x61\x00\x20\x00\x68\x00\x72\x00\x65\x00\x66\x00"
+				"\x3d\x00\x22\x00\x68\x00\x74\x00\x74\x00\x70\x00\x3a\x00\x2f"
+				"\x00\x2f\x00\x67\x00\x69\x00\x74\x00\x2e\x00\x71\x00\x75\x00"
+				"\x61\x00\x73\x00\x73\x00\x65\x00\x6c\x00\x2d\x00\x69\x00\x72"
+				"\x00\x63\x00\x2e\x00\x6f\x00\x72\x00\x67\x00\x2f\x00\x3f\x00"
+				"\x70\x00\x3d\x00\x71\x00\x75\x00\x61\x00\x73\x00\x73\x00\x65"
+				"\x00\x6c\x00\x2e\x00\x67\x00\x69\x00\x74\x00\x3b\x00\x61\x00"
+				"\x3d\x00\x63\x00\x6f\x00\x6d\x00\x6d\x00\x69\x00\x74\x00\x3b"
+				"\x00\x68\x00\x3d\x00\x30\x00\x31\x00\x36\x00\x31\x00\x64\x00"
+				"\x32\x00\x36\x00\x65\x00\x30\x00\x62\x00\x61\x00\x33\x00\x37"
+				"\x00\x63\x00\x39\x00\x38\x00\x31\x00\x33\x00\x30\x00\x63\x00"
+				"\x64\x00\x61\x00\x30\x00\x31\x00\x62\x00\x37\x00\x62\x00\x38"
+				"\x00\x36\x00\x33\x00\x37\x00\x62\x00\x38\x00\x61\x00\x63\x00"
+				"\x30\x00\x31\x00\x31\x00\x35\x00\x31\x00\x22\x00\x3e\x00\x30"
+				"\x00\x31\x00\x36\x00\x31\x00\x64\x00\x32\x00\x36\x00\x3c\x00"
+				"\x2f\x00\x61\x00\x3e\x00\x29\x00\x00\x00\x14\x00\x43\x00\x6c"
+				"\x00\x69\x00\x65\x00\x6e\x00\x74\x00\x44\x00\x61\x00\x74\x00"
+				"\x65\x00\x00\x00\x0a\x00\x00\x00\x00\x28\x00\x4d\x00\x61\x00"
+				"\x79\x00\x20\x00\x20\x00\x35\x00\x20\x00\x32\x00\x30\x00\x30"
+				"\x00\x39\x00\x20\x00\x31\x00\x30\x00\x3a\x00\x30\x00\x36\x00"
+				"\x3a\x00\x31\x00\x32", 545);
+		BIO_read(sbio,sbuf,BUFSIZZ);
+		}
 
 	for (;;)
 		{
-- 
1.6.0.4

